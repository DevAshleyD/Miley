"""
Django settings for miley project.

Generated by 'django-admin startproject' using Django 3.2.

For more information on this file, see
https://docs.djangoproject.com/en/3.2/topics/settings/

For the full list of settings and their values, see
https://docs.djangoproject.com/en/3.2/ref/settings/
"""

# Build paths inside the project like this: os.path.join(BASE_DIR, ...)
from pathlib import Path
import os
# For the accounts authentication urls
from django.urls import reverse

# Build paths inside the project like this: BASE_DIR / 'subdir'.
BASE_DIR = Path(__file__).resolve().parent.parent
DATA_DIR = os.path.dirname(os.path.dirname(__file__))

# SECURITY WARNING: keep the secret key used in production secret!
SECRET_KEY = os.environ.get('SECRET_KEY', '=eyvhik^@a5q8ua&$^r-&yzo)2@i@6djhx%^5)d3h9zgv3l*w_')


# SECURITY WARNING: don't run with debug turned on in production!
DEBUG = os.environ.get('DEBUG', 0)
THUMBNAIL_DEBUG = os.environ.get('DEBUG', 0)
#THUMBNAIL_DEBUG = True

ALLOWED_HOSTS = [
    'localhost',
    'miley.dev'
]
SITE_ID=1

# Application definition

INSTALLED_APPS = (
    #'django.contrib.admin',
    #'django.contrib.auth',
    'django.contrib.contenttypes',
    'django.contrib.sessions',
    'django.contrib.messages',
    'django.contrib.staticfiles',
    'easy_thumbnails',
    'django.contrib.sites',
    'django.contrib.sitemaps',
    #'haystack',
    'taggit',
    'sorl.thumbnail',
    'paypal.standard.ipn',
    #'miley',
    #'blog',
    #'images',
    #'accounts',
    #'activities',
    #'shop',
    #'payments',
    #'coupons',
    #'videos',
    # 'graphene_django',
)

MIDDLEWARE = (
    #'django.middleware.security.SecurityMiddleware',
    #'django.contrib.sessions.middleware.SessionMiddleware',
    #'django.middleware.common.CommonMiddleware',
    'django.middleware.csrf.CsrfViewMiddleware',
    #'django.contrib.auth.middleware.AuthenticationMiddleware',
    #'django.contrib.messages.middleware.MessageMiddleware',
    'django.middleware.clickjacking.XFrameOptionsMiddleware',
)

ROOT_URLCONF = 'miley.urls'

TEMPLATES = [
    {
        'BACKEND': 'django.template.backends.django.DjangoTemplates',
        'DIRS': [],
        'APP_DIRS': True,
        'OPTIONS': {
            'context_processors': [
                'django.template.context_processors.debug',
                'django.template.context_processors.request',
                'django.contrib.auth.context_processors.auth',
                'django.contrib.messages.context_processors.messages',
                'shop.context_processors.cart',
            ],
            'debug': os.environ.get('DEBUG', 0),
        },
    },
]

WSGI_APPLICATION = 'miley.wsgi.application'


# Database
# https://docs.djangoproject.com/en/1.8/ref/settings/#databases

DATABASES = {
    'default': {
        'ENGINE': 'django.db.backends.postgresql',
        'NAME': os.environ.get('DB_NAME', 'postgres'),
        'USER': os.environ.get('DB_USERNAME', 'postgres'),
        'PASSWORD': os.environ.get('DB_PASSWORD', ''),
        'HOST': os.environ.get('DB_HOST', 'localhost'),
        'POST': 5432,
    }
}

# Password validation
# https://docs.djangoproject.com/en/3.2/ref/settings/#auth-password-validators

AUTH_PASSWORD_VALIDATORS = [
    {
        'NAME': 'django.contrib.auth.password_validation.UserAttributeSimilarityValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.MinimumLengthValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.CommonPasswordValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.NumericPasswordValidator',
    },
]


# Internationalization
# https://docs.djangoproject.com/en/1.8/topics/i18n/

LANGUAGE_CODE = 'en-us'

TIME_ZONE = 'UTC'

USE_I18N = True

USE_L10N = True

USE_TZ = True


# Static files (CSS, JavaScript, Images)
# https://docs.djangoproject.com/en/1.8/howto/static-files/

STATIC_URL = '/public/'
STATIC_ROOT = os.path.join(BASE_DIR, 'miley', 'public', 'media')
STATICFILES_DIRS = (
    os.path.join(BASE_DIR, 'miley', 'public'),
    os.path.join(BASE_DIR, 'public'),
    os.path.join(BASE_DIR, 'media'),
)
# User uploads
MEDIA_URL = '/media/'
MEDIA_ROOT = os.path.join(DATA_DIR, 'media')

# Default primary key field type
# https://docs.djangoproject.com/en/3.2/ref/settings/#default-auto-field

DEFAULT_AUTO_FIELD = 'django.db.models.BigAutoField'

#LOGIN_REDIRECT_URL = reverse('home_feed')
#LOGIN_URL = reverse('login')
#LOGOUT_URL = reverse('logout')

ABSOLUTE_USER_OVERRIDES = {
    'auth_user': lambda u: reverse('user_detail', args=[u.username])
}

EMAIL_BACKEND='django.core.mail.backends.console.EmailBackend'

EMAIL_HOST=os.environ.get('SMTP_HOST', 'localhost')
EMAIL_USER=os.environ.get('SMTP_USER', '')
EMAIL_PASSWORD=os.environ.get('SMTP_PASSWORD', '')
EMAIL_PORT=os.environ.get('SMTP_PORT', 587)
EMAIL_USER_TLS=os.environ.get('DEBUG', 0)

#HAYSTACK_CONNECTIONS = {
    #'default': {
        #'ENGINE': 'haystack.backends.solr_backend.SolrEngine',
        #'URL': 'http://127.0.0.1:8983/solr/miley'
    #}
#}

REDIS_HOST=os.environ.get('REDIS_HOST', 'redis')
REDIS_PORT=os.environ.get('REDIS_PORT', 6379)
REDIS_DATABASE=os.environ.get('REDIS_DATABASE', 'redis')

CART_SESSION_ID = 'cart_sid'

PAYPAL_RECEIVER_EMAIL=os.environ.get('PAYPAL_RECEIVER_EMAIL')
PAYPAL_TEST=bool(os.environ.get('PAYPAL_TEST'))
